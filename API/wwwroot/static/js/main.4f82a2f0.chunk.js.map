{"version":3,"sources":["app/models/Pagination.ts","app/api/agent.ts","app/models/Activity.ts","app/models/Profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/CommentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfilesActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","console","log","setLoadingInitial","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","HandleFollow","Card","Description","str","length","substr","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","ItemGroup","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","SetActivity","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","SetEditMode","Tab","Pane","itemsPerRow","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropZone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.4f82a2f0.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity, ActivityFormValues } from '../models/Activity';\r\nimport { PaginatedResult } from '../models/Pagination';\r\nimport { Photo, Profile, UserActivity } from '../models/Profile';\r\nimport { User, UserFormValues } from '../models/User';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token)\r\n        config.headers.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development')\r\n        await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data === 'string') {\r\n                toast.error(data);\r\n            }\r\n            if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n                history.push('/notfound');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error(\"unauthorized\");\r\n            break;\r\n        case 404:\r\n            toast.error(\"not found\");\r\n            history.push(\"/not-found\");\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push(\"/server-error\");\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params })\r\n        .then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n    fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {})\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append(\"File\", file);\r\n        return axios.post<Photo>('photos', formData, { headers: { 'Content-type': 'multipart/form-data' } });\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) =>\r\n        requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) =>\r\n        requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./Profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[]\r\n}\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: Activity) {\r\n        if (activity) {\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.venue = activity.venue;\r\n            this.city = activity.city;\r\n        }\r\n    }\r\n}","import { User } from \"./User\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface PhotoFile extends File {\r\n    preview: string;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/Activity\";\r\nimport { Pagination, PagingParams } from \"../models/Pagination\";\r\nimport { Profile } from \"../models/Profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate')\r\n                    this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true)\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    }\r\n\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n            a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(this.activitiesByDate.reduce((activities, activity) => {\r\n            const date = format(activity.date!, 'dd MMM yyyy');\r\n            activities[date] = activities[date] ? [...activities[date], activity] : [activity]\r\n            return activities;\r\n        }, {} as { [key: string]: Activity[] }));\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n            result.data.forEach((activity) => {\r\n                this.setActivity(activity);\r\n            });\r\n            this.setPagination(result.pagination);\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                });\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n            } finally {\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(a => a.username === user.username);\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n        }\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = { ...this.getActivity(activity.id), ...activity }\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if (this.selectedActivity?.isGoing) {\r\n                    this.selectedActivity.attendees = this.selectedActivity\r\n                        .attendees?.filter(a => a.username !== user?.username);\r\n                    this.selectedActivity.isGoing = false;\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activityRegistry.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        });\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings = false;\r\n    activeTab = 0;\r\n    userActivities: UserActivity[] = [];\r\n    loadingActivities = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.activeTab,\r\n            activeTab => {\r\n                if (activeTab === 3 || activeTab === 4) {\r\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\r\n                    this.loadFollowings(predicate);\r\n                }\r\n                else {\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile.displayName);\r\n                }\r\n                this.profile = { ...this.profile, ...profile as Profile };\r\n            });\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.username === username) {\r\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                        profile.following = !profile.following;\r\n                    }\r\n                })\r\n            });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n    }\r\n\r\n    loadUserActivities = async (username: string, predicate?: string) => {\r\n        this.loadingActivities = true;\r\n        try {\r\n            const activities = await agent.Profiles.listActivities(username, predicate!);\r\n            runInAction(() => {\r\n                this.userActivities = activities;\r\n            });\r\n        } catch (error) {\r\n            console.log(error)\r\n        } finally {\r\n            runInAction(() => this.loadingActivities = false);\r\n        }\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/User\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n    fbAccessToken: string | null = null;\r\n    fbLoading = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        }\r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            runInAction(() => this.user = user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        }\r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if (this.user)\r\n            this.user.image = image;\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user)\r\n            this.user.displayName = name;\r\n    }\r\n\r\n    getFacebookLoginStatus = async () => {\r\n        window.FB.getLoginStatus(response => {\r\n            if (response.status === \"connected\") {\r\n                this.fbAccessToken = response.authResponse.accessToken;\r\n            }\r\n        });\r\n    }\r\n\r\n    facebookLogin = () => {\r\n        this.fbLoading = true;\r\n        const apiLogin = (accessToken: string) => {\r\n            agent.Account.fbLogin(accessToken).then(user => {\r\n                store.commonStore.setToken(user.token);\r\n                runInAction(() => {\r\n                    this.user = user;\r\n                    this.fbLoading = false;\r\n                });\r\n                history.push(\"/activities\");\r\n            }).catch(error => {\r\n                console.log(error);\r\n                runInAction(() => this.fbLoading = false);\r\n            });\r\n        }\r\n        if (this.fbAccessToken) {\r\n            apiLogin(this.fbAccessToken)\r\n        } else {\r\n            window.FB.login(response => {\r\n                apiLogin(response.authResponse.accessToken);\r\n            }, { scope: \"public_profile,email\" })\r\n        }\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./CommentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/ServerError\";\r\n\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem(\"jwt\");\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem(\"jwt\", token);\r\n                } else {\r\n                    window.localStorage.removeItem(\"jwt\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/Comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                    accessTokenFactory: () => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log(\"Error establishing the connection: \", error));\r\n\r\n            this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    });\r\n                    this.comments = comments\r\n                });\r\n            })\r\n\r\n            this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log(\"Error stopping connection \", error));\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke(\"SendComment\", values);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.username}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: \"25px\" }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        ></Menu.Item>\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        ></Menu.Item>\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        ></Menu.Item>\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Reveal, Button } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function HandleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => HandleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str?.length > 40 ? `${str?.substr(0, 37)}...` : str;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({\r\n  attendees,\r\n}: Props) {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 3,\r\n  };\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee}></ProfileCard>\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Item,\r\n  Button,\r\n  Segment,\r\n  ItemGroup,\r\n  Icon,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\nimport { format } from \"date-fns\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <ItemGroup>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by{\" \"}\r\n                <Link to={`/profiles/${activity.hostUsername}`}>\r\n                  {activity.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </ItemGroup>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"teal\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/Pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    loadActivities,\r\n    activityRegistry,\r\n    setPagingParams,\r\n    pagination,\r\n  } = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Header,\r\n  Image,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            style={{ marginBottom: \"12px\" }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n            <Divider horizontal inverted>\r\n              Or\r\n            </Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"facebook\"\r\n              content=\"Login with Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n    { text: 'Drinks', value: \"drinks\" },\r\n    { text: 'Culture', value: \"culture\" },\r\n    { text: 'Film', value: \"film\" },\r\n    { text: 'Food', value: \"food\" },\r\n    { text: 'Music', value: \"music\" },\r\n    { text: 'Travel', value: \"travel\" },\r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/Activity\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const {\r\n    createActivity,\r\n    updateActivity,\r\n    loadActivity,\r\n    loadingInitial,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, SetActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required(\"Date is required\").nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) =>\r\n        SetActivity(new ActivityFormValues(activity))\r\n      );\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Image,\r\n  Label,\r\n  ItemGroup,\r\n} from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <ItemGroup>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </ItemGroup>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              disabled={activity.isCancelled}\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button onClick={updateAttendance} loading={loading}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            onClick={updateAttendance}\r\n            loading={loading}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorized() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorized\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorized}\r\n            content=\"Unauthorized\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const {\r\n    profileStore: { isCurrentUser, profile },\r\n  } = useStore();\r\n  const [editMode, SetEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => SetEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={SetEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { PhotoFile } from \"../../models/Profile\";\r\n\r\ninterface Props {\r\n  setFiles: (files: PhotoFile[]) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropZone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: PhotoFile) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport { PhotoFile } from \"../../models/Profile\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropZone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<PhotoFile[]>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: PhotoFile) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropZone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={`main${photo.id}`}\r\n                        disabled={photo.isMain}\r\n                        loading={target === `main${photo.id}` && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport default observer(function ProfilesActivities() {\r\n  const { profileStore } = useStore();\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities,\r\n  } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content=\"Activities\" />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\nimport ProfilesActivities from \"./ProfilesActivities\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: \"Events\", render: () => <ProfilesActivities /> },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  ItemGroup,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <ItemGroup>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </ItemGroup>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Followings\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadProfile, loadingProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Redirect, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      userStore.getFacebookLoginStatus().then(() => {\n        commonStore.setAppLoaded();\n      });\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loading app..\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path=\"/(.+)\"\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profiles/:username\"\n                  component={ProfilePage}\n                />\n                <PrivateRoute path=\"/errors/\" component={TestErrors} />\n                <Route path=\"/server-error/\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}