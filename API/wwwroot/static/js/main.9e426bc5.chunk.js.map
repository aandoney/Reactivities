{"version":3,"sources":["app/models/Pagination.ts","app/api/agent.ts","app/models/Activity.ts","app/models/Profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/CommentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfilesActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/common/util/hooks.ts","features/users/RegisterSuccess.tsx","features/users/ConfirmEmail.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","verifyEmail","email","resendEmailConfirm","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","console","log","setLoadingInitial","loadActivity","getActivity","runInAction","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","isLoggedIn","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","HandleFollow","Card","Description","str","length","substr","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","ItemGroup","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","Divider","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","SetActivity","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","SetEditMode","Tab","Pane","itemsPerRow","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropZone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","Statistic","PrivateRoute","Component","component","rest","UseQuery","useLocation","search","RegisterSuccess","success","ConfirmEmail","Status","setStatus","handleConfirmEmailResend","SegmentInline","getBody","location","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.9e426bc5.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T, pagination: Pagination) {\r\n        this.data = data;\r\n        this.pagination = pagination;\r\n    }\r\n}\r\n\r\nexport class PagingParams {\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber = 1, pageSize = 2) {\r\n        this.pageNumber = pageNumber;\r\n        this.pageSize = pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity, ActivityFormValues } from '../models/Activity';\r\nimport { PaginatedResult } from '../models/Pagination';\r\nimport { Photo, Profile, UserActivity } from '../models/Profile';\r\nimport { User, UserFormValues } from '../models/User';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay: number) => {\r\n    return new Promise((resolve) => {\r\n        setTimeout(resolve, delay);\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token)\r\n        config.headers.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response => {\r\n    if (process.env.NODE_ENV === 'development')\r\n        await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n        response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n        return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n}, (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n    switch (status) {\r\n        case 400:\r\n            if (typeof data === 'string') {\r\n                toast.error(data);\r\n            }\r\n            if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n                history.push('/notfound');\r\n            }\r\n            if (data.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors) {\r\n                    if (data.errors[key]) {\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat();\r\n            }\r\n            break;\r\n        case 401:\r\n            if (status === 401 && headers['www-authenticate']?.startsWith('Bearer error=\"invalid_token\"')) {\r\n                store.userStore.logout();\r\n                toast.error(\"Sesion expired please login again\");\r\n            }\r\n            break;\r\n        case 404:\r\n            toast.error(\"not found\");\r\n            history.push(\"/not-found\");\r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n            history.push(\"/server-error\");\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n    post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n    put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n    del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (params: URLSearchParams) => axios.get<PaginatedResult<Activity[]>>('/activities', { params })\r\n        .then(responseBody),\r\n    details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n    update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {})\r\n}\r\n\r\nconst Account = {\r\n    current: () => requests.get<User>('/account'),\r\n    login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n    register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n    fbLogin: (accessToken: string) => requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n    refreshToken: () => requests.post<User>('/account/refreshToken', {}),\r\n    verifyEmail: (token: string, email: string) =>\r\n        requests.post<void>(`/account/verifyEmail?token=${token}&email=${email}`, {}),\r\n    resendEmailConfirm: (email: string) => requests.get(`/account/resendEmailConfirmationLink?email=${email}`)\r\n}\r\n\r\nconst Profiles = {\r\n    get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file: Blob) => {\r\n        let formData = new FormData();\r\n        formData.append(\"File\", file);\r\n        return axios.post<Photo>('photos', formData, { headers: { 'Content-type': 'multipart/form-data' } });\r\n    },\r\n    setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n    deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`, {}),\r\n    listFollowings: (username: string, predicate: string) =>\r\n        requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) =>\r\n        requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n}\r\n\r\nconst agent = {\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;","import { Profile } from \"./Profile\";\r\n\r\nexport interface Activity {\r\n    id: string;\r\n    title: string;\r\n    date: Date | null;\r\n    description: string;\r\n    category: string;\r\n    city: string;\r\n    venue: string;\r\n    hostUsername: string;\r\n    isCancelled: boolean;\r\n    isGoing: boolean;\r\n    isHost: boolean;\r\n    host?: Profile;\r\n    attendees: Profile[]\r\n}\r\n\r\nexport class Activity implements Activity {\r\n    constructor(init?: ActivityFormValues) {\r\n        Object.assign(this, init);\r\n    }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n    id?: string = undefined;\r\n    title: string = '';\r\n    category: string = '';\r\n    description: string = '';\r\n    date: Date | null = null;\r\n    city: string = '';\r\n    venue: string = '';\r\n\r\n    constructor(activity?: Activity) {\r\n        if (activity) {\r\n            this.id = activity.id;\r\n            this.title = activity.title;\r\n            this.category = activity.category;\r\n            this.description = activity.description;\r\n            this.date = activity.date;\r\n            this.venue = activity.venue;\r\n            this.city = activity.city;\r\n        }\r\n    }\r\n}","import { User } from \"./User\";\r\n\r\nexport interface Profile {\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n    constructor(user: User) {\r\n        this.username = user.username;\r\n        this.displayName = user.displayName;\r\n        this.image = user.image;\r\n    }\r\n}\r\n\r\nexport interface Photo {\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface PhotoFile extends File {\r\n    preview: string;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n}","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/Activity\";\r\nimport { Pagination, PagingParams } from \"../models/Pagination\";\r\nimport { Profile } from \"../models/Profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n    activityRegistry = new Map<string, Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null = null;\r\n    pagingParams = new PagingParams();\r\n    predicate = new Map().set('all', true);\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.predicate.keys(),\r\n            () => {\r\n                this.pagingParams = new PagingParams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    setPagingParams = (pagingParams: PagingParams) => {\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate: string, value: string | Date) => {\r\n        const resetPredicate = () => {\r\n            this.predicate.forEach((value, key) => {\r\n                if (key !== 'startDate')\r\n                    this.predicate.delete(key);\r\n            })\r\n        }\r\n        switch (predicate) {\r\n            case 'all':\r\n                resetPredicate();\r\n                this.predicate.set('all', true)\r\n                break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing', true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost', true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate', value);\r\n        }\r\n    }\r\n\r\n    get axiosParams() {\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n        params.append('pageSize', this.pagingParams.pageSize.toString());\r\n        this.predicate.forEach((value, key) => {\r\n            if (key === 'startDate') {\r\n                params.append(key, (value as Date).toISOString())\r\n            } else {\r\n                params.append(key, value);\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDate() {\r\n        return Array.from(this.activityRegistry.values()).sort((a, b) =>\r\n            a.date!.getTime() - b.date!.getTime());\r\n    }\r\n\r\n    get groupedActivities() {\r\n        return Object.entries(this.activitiesByDate.reduce((activities, activity) => {\r\n            const date = format(activity.date!, 'dd MMM yyyy');\r\n            activities[date] = activities[date] ? [...activities[date], activity] : [activity]\r\n            return activities;\r\n        }, {} as { [key: string]: Activity[] }));\r\n    }\r\n\r\n    loadActivities = async () => {\r\n        this.loadingInitial = true;\r\n        try {\r\n            const result = await agent.Activities.list(this.axiosParams);\r\n            result.data.forEach((activity) => {\r\n                this.setActivity(activity);\r\n            });\r\n            this.setPagination(result.pagination);\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            this.setLoadingInitial(false);\r\n        }\r\n    }\r\n\r\n    setPagination = (pagination: Pagination) => {\r\n        this.pagination = pagination;\r\n    }\r\n\r\n    loadActivity = async (id: string) => {\r\n        let activity = this.getActivity(id);\r\n        if (activity) {\r\n            this.selectedActivity = activity\r\n            return activity;\r\n        } else {\r\n            this.loadingInitial = true;\r\n            try {\r\n                activity = await agent.Activities.details(id);\r\n                this.setActivity(activity);\r\n                runInAction(() => {\r\n                    this.selectedActivity = activity;\r\n                });\r\n                return activity;\r\n            } catch (error) {\r\n                console.log(error);\r\n            } finally {\r\n                this.setLoadingInitial(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setActivity = (activity: Activity) => {\r\n        const user = store.userStore.user;\r\n        if (user) {\r\n            activity.isGoing = activity.attendees!.some(a => a.username === user.username);\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(x => x.username === activity.hostUsername);\r\n        }\r\n        activity.date = new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id, activity);\r\n    }\r\n\r\n    private getActivity = (id: string) => {\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    setLoadingInitial = (state: boolean) => {\r\n        this.loadingInitial = state;\r\n    }\r\n\r\n    createActivity = async (activity: ActivityFormValues) => {\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n        try {\r\n            await agent.Activities.create(activity);\r\n            const newActivity = new Activity(activity);\r\n            newActivity.hostUsername = user!.username;\r\n            newActivity.attendees = [attendee];\r\n            this.setActivity(newActivity);\r\n            runInAction(() => {\r\n                this.selectedActivity = newActivity;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    updateActivity = async (activity: ActivityFormValues) => {\r\n        try {\r\n            await agent.Activities.update(activity);\r\n            runInAction(() => {\r\n                if (activity.id) {\r\n                    let updatedActivity = { ...this.getActivity(activity.id), ...activity }\r\n                    this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    deleteActivity = async (id: string) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.delete(id);\r\n            runInAction(() => {\r\n                this.activityRegistry.delete(id);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => {\r\n                this.loading = false;\r\n            })\r\n        }\r\n    }\r\n\r\n    updateAttendance = async () => {\r\n        const user = store.userStore.user;\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                if (this.selectedActivity?.isGoing) {\r\n                    this.selectedActivity.attendees = this.selectedActivity\r\n                        .attendees?.filter(a => a.username !== user?.username);\r\n                    this.selectedActivity.isGoing = false;\r\n                } else {\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle = async () => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(() => {\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n                this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    clearSelectedActivity = () => {\r\n        this.selectedActivity = undefined;\r\n    }\r\n\r\n    updateAttendeeFollowing = (username: string) => {\r\n        this.activityRegistry.forEach(activity => {\r\n            activity.attendees.forEach(attendee => {\r\n                if (attendee.username === username) {\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n                    attendee.following = !attendee.following;\r\n                }\r\n            })\r\n        });\r\n    }\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/Profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n    profile: Profile | null = null;\r\n    loadingProfile = false;\r\n    uploading = false;\r\n    loading = false;\r\n    followings: Profile[] = [];\r\n    loadingFollowings = false;\r\n    activeTab = 0;\r\n    userActivities: UserActivity[] = [];\r\n    loadingActivities = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.activeTab,\r\n            activeTab => {\r\n                if (activeTab === 3 || activeTab === 4) {\r\n                    const predicate = activeTab === 3 ? 'followers' : 'following';\r\n                    this.loadFollowings(predicate);\r\n                }\r\n                else {\r\n                    this.followings = [];\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setActiveTab = (activeTab: any) => {\r\n        this.activeTab = activeTab;\r\n    }\r\n\r\n    get isCurrentUser() {\r\n        if (store.userStore.user && this.profile) {\r\n            return store.userStore.user.username === this.profile.username;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadProfile = async (username: string) => {\r\n        this.loadingProfile = true;\r\n        try {\r\n            const profile = await agent.Profiles.get(username);\r\n            runInAction(() => {\r\n                this.profile = profile;\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loadingProfile = false);\r\n        }\r\n    }\r\n\r\n    uploadPhoto = async (file: Blob) => {\r\n        this.uploading = true;\r\n        try {\r\n            const response = await agent.Profiles.uploadPhoto(file);\r\n            const photo = response.data;\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos?.push(photo);\r\n                    if (photo.isMain && store.userStore.user) {\r\n                        store.userStore.setImage(photo.url);\r\n                        this.profile.image = photo.url;\r\n                    }\r\n                }\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            runInAction(() => this.uploading = false);\r\n        }\r\n    }\r\n\r\n    setMainPhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.setMainPhoto(photo.id);\r\n            store.userStore.setImage(photo.url);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.photos) {\r\n                    this.profile.photos.find(p => p.isMain)!.isMain = false;\r\n                    this.profile.photos.find(p => p.id === photo.id)!.isMain = true;\r\n                    this.profile.image = photo.url;\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    deletePhoto = async (photo: Photo) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.deletePhoto(photo.id);\r\n            runInAction(() => {\r\n                if (this.profile) {\r\n                    this.profile.photos = this.profile.photos?.filter(p => p.id !== photo.id);\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateProfile = async (profile: Partial<Profile>) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateProfile(profile);\r\n            runInAction(() => {\r\n                if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n                    store.userStore.setDisplayName(profile.displayName);\r\n                }\r\n                this.profile = { ...this.profile, ...profile as Profile };\r\n            });\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    updateFollowing = async (username: string, following: boolean) => {\r\n        this.loading = true;\r\n        try {\r\n            await agent.Profiles.updateFollowing(username);\r\n            store.activityStore.updateAttendeeFollowing(username);\r\n            runInAction(() => {\r\n                if (this.profile && this.profile.username !== store.userStore.user?.username && this.profile.username === username) {\r\n                    following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n                    this.profile.following = !this.profile.following;\r\n                }\r\n                if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n                    following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n                }\r\n                this.followings.forEach(profile => {\r\n                    if (profile.username === username) {\r\n                        profile.following ? profile.followersCount-- : profile.followersCount++;\r\n                        profile.following = !profile.following;\r\n                    }\r\n                })\r\n            });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n            runInAction(() => this.loading = false);\r\n        }\r\n    }\r\n\r\n    loadFollowings = async (predicate: string) => {\r\n        this.loadingFollowings = true;\r\n        try {\r\n            const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n            runInAction(() => {\r\n                this.followings = followings;\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            runInAction(() => this.loadingFollowings = false);\r\n        }\r\n    }\r\n\r\n    loadUserActivities = async (username: string, predicate?: string) => {\r\n        this.loadingActivities = true;\r\n        try {\r\n            const activities = await agent.Profiles.listActivities(username, predicate!);\r\n            runInAction(() => {\r\n                this.userActivities = activities;\r\n            });\r\n        } catch (error) {\r\n            console.log(error)\r\n        } finally {\r\n            runInAction(() => this.loadingActivities = false);\r\n        }\r\n    }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/User\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n    user: User | null = null;\r\n    fbAccessToken: string | null = null;\r\n    fbLoading = false;\r\n    refreshTokenTimeout: any;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    get isLoggedIn() {\r\n        return !!this.user;\r\n    }\r\n\r\n    login = async (creds: UserFormValues) => {\r\n        try {\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n            runInAction(() => this.user = user);\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n        }\r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async () => {\r\n        try {\r\n            const user = await agent.Account.current();\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(() => this.user = user);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues) => {\r\n        try {\r\n            await agent.Account.register(creds);\r\n            history.push(`/account/registerSuccess?email=${creds.email}`);\r\n            store.modalStore.closeModal();\r\n        }\r\n        catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image: string) => {\r\n        if (this.user)\r\n            this.user.image = image;\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user)\r\n            this.user.displayName = name;\r\n    }\r\n\r\n    getFacebookLoginStatus = async () => {\r\n        window.FB.getLoginStatus(response => {\r\n            if (response.status === \"connected\") {\r\n                this.fbAccessToken = response.authResponse.accessToken;\r\n            }\r\n        });\r\n    }\r\n\r\n    facebookLogin = () => {\r\n        this.fbLoading = true;\r\n        const apiLogin = (accessToken: string) => {\r\n            agent.Account.fbLogin(accessToken).then(user => {\r\n                store.commonStore.setToken(user.token);\r\n                this.startRefreshTokenTimer(user);\r\n                runInAction(() => {\r\n                    this.user = user;\r\n                    this.fbLoading = false;\r\n                });\r\n                history.push(\"/activities\");\r\n            }).catch(error => {\r\n                console.log(error);\r\n                runInAction(() => this.fbLoading = false);\r\n            });\r\n        }\r\n        if (this.fbAccessToken) {\r\n            apiLogin(this.fbAccessToken)\r\n        } else {\r\n            window.FB.login(response => {\r\n                apiLogin(response.authResponse.accessToken);\r\n            }, { scope: \"public_profile,email\" })\r\n        }\r\n    }\r\n\r\n    refreshToken = async () => {\r\n        this.stopRefreshTokenTimer();\r\n        try {\r\n            const user = await agent.Account.refreshToken();\r\n            runInAction(() => this.user = user);\r\n            store.commonStore.setToken(user.token);\r\n            this.startRefreshTokenTimer(user);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    private startRefreshTokenTimer(user: User) {\r\n        const jwtToken = JSON.parse(atob(user.token.split('.')[1]));\r\n        const expires = new Date(jwtToken.exp * 1000);\r\n        const timeout = expires.getTime() - Date.now() - (60 * 1000);\r\n        this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n    }\r\n\r\n    private stopRefreshTokenTimer() {\r\n        clearTimeout(this.refreshTokenTimeout);\r\n    }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./CommentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n    activityStore: ActivityStore;\r\n    commonStore: CommonStore;\r\n    userStore: UserStore;\r\n    modalStore: ModalStore;\r\n    profileStore: ProfileStore;\r\n    commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore: new ProfileStore(),\r\n    commentStore: new CommentStore()\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n    return useContext(StoreContext);\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/ServerError\";\r\n\r\n\r\nexport default class CommonStore {\r\n    error: ServerError | null = null;\r\n    token: string | null = window.localStorage.getItem(\"jwt\");\r\n    appLoaded = false;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n        reaction(\r\n            () => this.token,\r\n            token => {\r\n                if (token) {\r\n                    window.localStorage.setItem(\"jwt\", token);\r\n                } else {\r\n                    window.localStorage.removeItem(\"jwt\");\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error: ServerError) => {\r\n        this.error = error;\r\n    }\r\n\r\n    setToken = (token: string | null) => {\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded = () => {\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n    modal: Modal = {\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    openModal = (content: JSX.Element) => {\r\n        this.modal.open = true;\r\n        this.modal.body = content;\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.modal.open = false;\r\n        this.modal.body = null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/Comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n    comments: ChatComment[] = [];\r\n    hubConnection: HubConnection | null = null;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    createHubConnection = (activityId: string) => {\r\n        if (store.activityStore.selectedActivity) {\r\n            this.hubConnection = new HubConnectionBuilder()\r\n                .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n                    accessTokenFactory: () => store.userStore.user?.token!\r\n                })\r\n                .withAutomaticReconnect()\r\n                .configureLogging(LogLevel.Information)\r\n                .build();\r\n\r\n            this.hubConnection.start().catch(error => console.log(\"Error establishing the connection: \", error));\r\n\r\n            this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n                runInAction(() => {\r\n                    comments.forEach(comment => {\r\n                        comment.createdAt = new Date(comment.createdAt + 'Z');\r\n                    });\r\n                    this.comments = comments\r\n                });\r\n            })\r\n\r\n            this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n                runInAction(() => {\r\n                    comment.createdAt = new Date(comment.createdAt);\r\n                    this.comments.unshift(comment)\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () => {\r\n        this.hubConnection?.stop().catch(error => console.log(\"Error stopping connection \", error));\r\n    }\r\n\r\n    clearComments = () => {\r\n        this.comments = [];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async (values: any) => {\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke(\"SendComment\", values);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout, isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} to=\"/\" exact header>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        {isLoggedIn && (\r\n          <>\r\n            <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n            <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n            <Menu.Item>\r\n              <Button\r\n                as={NavLink}\r\n                to=\"/createActivity\"\r\n                positive\r\n                content=\"Create Activity\"\r\n              />\r\n            </Menu.Item>\r\n            <Menu.Item position=\"right\">\r\n              <Image\r\n                src={user?.image || \"/assets/user.png\"}\r\n                avatar\r\n                spaced=\"right\"\r\n              />\r\n              <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n                <Dropdown.Menu>\r\n                  <Dropdown.Item\r\n                    as={Link}\r\n                    to={`/profiles/${user?.username}`}\r\n                    text=\"My Profile\"\r\n                    icon=\"user\"\r\n                  />\r\n                  <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n                </Dropdown.Menu>\r\n              </Dropdown>\r\n            </Menu.Item>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: \"25px\" }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        ></Menu.Item>\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        ></Menu.Item>\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        ></Menu.Item>\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Reveal, Button } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function HandleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => HandleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str?.length > 40 ? `${str?.substr(0, 37)}...` : str;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/Profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({\r\n  attendees,\r\n}: Props) {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 3,\r\n  };\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee}></ProfileCard>\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Item,\r\n  Button,\r\n  Segment,\r\n  ItemGroup,\r\n  Icon,\r\n  Label,\r\n} from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\nimport { format } from \"date-fns\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <ItemGroup>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by{\" \"}\r\n                <Link to={`/profiles/${activity.hostUsername}`}>\r\n                  {activity.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </ItemGroup>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"teal\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/Pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    loadActivities,\r\n    activityRegistry,\r\n    setPagingParams,\r\n    pagination,\r\n  } = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: error.response.data }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" type=\"password\" placeholder=\"Password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Header,\r\n  Image,\r\n  Segment,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            style={{ marginBottom: \"12px\" }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n            <Divider horizontal inverted>\r\n              Or\r\n            </Divider>\r\n            <Button\r\n              loading={userStore.fbLoading}\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"facebook\"\r\n              content=\"Login with Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n    { text: 'Drinks', value: \"drinks\" },\r\n    { text: 'Culture', value: \"culture\" },\r\n    { text: 'Film', value: \"film\" },\r\n    { text: 'Food', value: \"food\" },\r\n    { text: 'Music', value: \"music\" },\r\n    { text: 'Travel', value: \"travel\" },\r\n]","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/Activity\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const history = useHistory();\r\n  const { activityStore } = useStore();\r\n  const {\r\n    createActivity,\r\n    updateActivity,\r\n    loadActivity,\r\n    loadingInitial,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, SetActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required(\"Date is required\").nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) =>\r\n        SetActivity(new ActivityFormValues(activity))\r\n      );\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"button\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Image,\r\n  Label,\r\n  ItemGroup,\r\n} from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <ItemGroup>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </ItemGroup>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              disabled={activity.isCancelled}\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button onClick={updateAttendance} loading={loading}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            onClick={updateAttendance}\r\n            loading={loading}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/Activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (loadingInitial || !activity) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorized() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorized\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorized}\r\n            content=\"Unauthorized\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const {\r\n    profileStore: { isCurrentUser, profile },\r\n  } = useStore();\r\n  const [editMode, SetEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => SetEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={SetEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\nimport { PhotoFile } from \"../../models/Profile\";\r\n\r\ninterface Props {\r\n  setFiles: (files: PhotoFile[]) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropZone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: PhotoFile) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport { PhotoFile } from \"../../models/Profile\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropZone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<PhotoFile[]>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: PhotoFile) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropZone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={`main${photo.id}`}\r\n                        disabled={photo.isMain}\r\n                        loading={target === `main${photo.id}` && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport default observer(function ProfilesActivities() {\r\n  const { profileStore } = useStore();\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities,\r\n  } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content=\"Activities\" />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\nimport ProfilesActivities from \"./ProfilesActivities\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: \"Events\", render: () => <ProfilesActivities /> },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  ItemGroup,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/Profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <ItemGroup>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </ItemGroup>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Followings\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadProfile, loadingProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Redirect, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { useLocation } from \"react-router\";\r\n\r\nexport default function UseQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport UseQuery from \"../../app/common/util/hooks\";\r\n\r\nexport default function RegisterSuccess() {\r\n  const email = UseQuery().get(\"email\") as string;\r\n\r\n  function handleConfirmEmailResend() {\r\n    agent.Account.resendEmailConfirm(email)\r\n      .then(() => {\r\n        toast.success(\"Verification email resent - please check you email\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  return (\r\n    <Segment placeholder textAlign=\"center\">\r\n      <Header icon color=\"green\">\r\n        <Icon name=\"check\" />\r\n        Successfully registered\r\n      </Header>\r\n      <p>\r\n        Please check your email (including junk email) for the verification\r\n        email\r\n      </p>\r\n      {email && (\r\n        <>\r\n          <p>Didn't receive the email? clich the below button to resend</p>\r\n          <Button\r\n            primary\r\n            onClick={handleConfirmEmailResend}\r\n            content=\"Resend email\"\r\n            size=\"huge\"\r\n          />\r\n        </>\r\n      )}\r\n    </Segment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  Button,\r\n  Header,\r\n  Icon,\r\n  Segment,\r\n  SegmentInline,\r\n} from \"semantic-ui-react\";\r\nimport agent from \"../../app/api/agent\";\r\nimport UseQuery from \"../../app/common/util/hooks\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nexport default function ConfirmEmail() {\r\n  const { modalStore } = useStore();\r\n  const email = UseQuery().get(\"email\") as string;\r\n  const token = UseQuery().get(\"token\") as string;\r\n\r\n  const Status = {\r\n    Verifying: \"Verifying\",\r\n    Failed: \"Failed\",\r\n    Success: \"Success\",\r\n  };\r\n\r\n  const [status, setStatus] = useState(Status.Verifying);\r\n\r\n  function handleConfirmEmailResend() {\r\n    agent.Account.resendEmailConfirm(email)\r\n      .then(() => {\r\n        toast.success(\"Verification email resent - please check you email\");\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  useEffect(() => {\r\n    agent.Account.verifyEmail(token, email)\r\n      .then(() => {\r\n        setStatus(Status.Success);\r\n      })\r\n      .catch(() => {\r\n        setStatus(Status.Failed);\r\n      });\r\n  }, [Status.Failed, Status.Success, token, email]);\r\n\r\n  function getBody() {\r\n    switch (status) {\r\n      case Status.Verifying:\r\n        return <p>Verifying...</p>;\r\n      case Status.Failed:\r\n        return (\r\n          <div>\r\n            <p>\r\n              Verification failed. You can try resending the verify link to your\r\n              email\r\n            </p>\r\n            <Button\r\n              primary\r\n              onClick={handleConfirmEmailResend}\r\n              size=\"huge\"\r\n              content=\"Resend Email\"\r\n            />\r\n          </div>\r\n        );\r\n      case Status.Success:\r\n        return (\r\n          <div>\r\n            <p>Email has been verified - you can now login</p>\r\n            <Button\r\n              primary\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              content=\"Login\"\r\n            />\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Segment placeholder textAlign=\"center\">\r\n      <Header icon>\r\n        <Icon name=\"envelope\" />\r\n        Email verification\r\n      </Header>\r\n      <SegmentInline>{getBody()}</SegmentInline>\r\n    </Segment>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useLocation } from \"react-router\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport RegisterSuccess from \"../../features/users/RegisterSuccess\";\r\nimport ConfirmEmail from \"../../features/users/ConfirmEmail\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => {\r\n        commonStore.setAppLoaded();\r\n      });\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading app..\" />;\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path=\"/(.+)\"\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoute\r\n                  exact\r\n                  path=\"/activities\"\r\n                  component={ActivityDashboard}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/activities/:id\"\r\n                  component={ActivityDetails}\r\n                />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/profiles/:username\"\r\n                  component={ProfilePage}\r\n                />\r\n                <PrivateRoute path=\"/errors/\" component={TestErrors} />\r\n                <Route path=\"/server-error/\" component={ServerError} />\r\n                <Route\r\n                  path=\"/account/registerSuccess\"\r\n                  component={RegisterSuccess}\r\n                />\r\n                <Route path=\"/account/verifyEmail\" component={ConfirmEmail} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}